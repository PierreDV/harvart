{"version":3,"sources":["actions/index.js","reducers/reducer_images.js","reducers/reducer_modal.js","reducers/rootReducer.js","containers/search_bar.js","components/image_grid_item.js","components/modal.js","containers/image_grid.js","components/app.js","index.js","store.js"],"names":["API_KEY","BASE_URL","FETCH_IMAGES_REQUEST","FETCH_IMAGES_SUCCESS","FETCH_IMAGES_FAILURE","SHOW_MODAL","fetchImagesAsync","place","dispatch","type","PLACE_URL","concat","fetch","then","res","json","records","length","error","OBJECT_URL","id","console","log","data","INITIAL_STATE","items","isFetching","isOpen","image","rootReducer","combineReducers","state","arguments","undefined","action","Object","objectSpread","modal","SearchBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","preventDefault","setState","target","value","react_default","a","createElement","onSubmit","className","size","placeholder","onChange","Component","connect","bindActionCreators","ImageGridItem","imageStatus","handleOnClick","onClick","image_url","src","alt","onLoad","handleImageLoaded","onError","handleImageError","description","Modal","ImageGrid","showModal","_this2","map","record","images","image_grid_item","baseimageurl","title","key","components_modal","_ref","App","search_bar","image_grid","React","ReactDOM","render","es","store","createStore","applyMiddleware","thunk","configureStore","app","document","getElementById"],"mappings":"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","file":"static/js/main.a1737037.chunk.js","sourcesContent":["const API_KEY = '81c02e10-19a3-11e9-a436-ede6838aae81';\nconst BASE_URL = 'https://api.harvardartmuseums.org/'\n// https://github.com/harvardartmuseums/api-docs\n\nexport const FETCH_IMAGES_REQUEST = 'FETCH_IMAGES_REQUEST';\nexport const FETCH_IMAGES_SUCCESS = 'FETCH_IMAGES_SUCCESS';\nexport const FETCH_IMAGES_FAILURE = 'FETCH_IMAGES_FAILURE';\n\nexport const SHOW_MODAL = 'SHOW_MODAL';\n\nexport function fetchImagesAsync(place){\n  return (dispatch) => {\n    dispatch(fetchImagesRequest());\n    const PLACE_URL = `${BASE_URL}place?apikey=${API_KEY}&q=name:${place}`;\n    fetch(PLACE_URL)\n      .then(res => res.json())\n      .then((res) => {\n        if (!res.records.length) {\n          return dispatch(fetchImagesFailure(\"Could not locate images from entered place\"));\n        }\n        const OBJECT_URL = \n          `${BASE_URL}object?apikey=${API_KEY}&place=${res.records[0].id}&q=people.role:Artist AND imagepermissionlevel:0&size=30`\n        return fetch(OBJECT_URL)\n          .then(res => res.json())\n          .then((res) => {\n            console.log(res)\n            // if(!res.records[0].images.length) {\n            //   return dispatch(fetchImagesFailure(\"No images were found for entered location\"));\n            // }\n            dispatch(fetchImagesSuccess(res))\n  \t\t\t\t})\n      })\n  }\n}\n\nfunction fetchImagesSuccess(data) {\n  return {\n    type: FETCH_IMAGES_SUCCESS,\n    data: data.records\n  };\n}\n\nfunction fetchImagesRequest() {\n  return {\n    type: FETCH_IMAGES_REQUEST,\n  };\n}\n\nfunction fetchImagesFailure(error) {\n  return {\n    type: FETCH_IMAGES_FAILURE,\n    error\n  }\n}\n\nexport function showModal(image) {\n  return {\n    type: SHOW_MODAL,\n    image\n  }\n}","import { \n\tFETCH_IMAGES_SUCCESS, \n\tFETCH_IMAGES_REQUEST, \n\tFETCH_IMAGES_FAILURE \n} from '../actions/index';\n\nconst INITIAL_STATE = {\n\titems: [],\n\tisFetching: false,\n\terror: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\tcase FETCH_IMAGES_REQUEST:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: true,\n\t\t\terror: null,\n\t\t};\n\tcase FETCH_IMAGES_SUCCESS:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: false,\n\t\t\titems: action.data,\n\t\t\terror: null,\n\t\t};\n\tcase FETCH_IMAGES_FAILURE:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: false,\n\t\t\terror: action.error,\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n}\n","import { SHOW_MODAL } from '../actions/index';\n\nconst INITIAL_STATE = {\n  isOpen: false,\n  image: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n  case SHOW_MODAL:\n    return {\n      ...state,\n      isOpen: true,\n      image: action.image\n    }\n  default:\n    return state;\n  }\n}","import { combineReducers} from 'redux';\nimport ImageReducer from './reducer_images';\nimport ModalReducer from './reducer_modal';\n\nconst rootReducer = combineReducers({\n  records: ImageReducer,\n  modal: ModalReducer\n});\n\nexport default rootReducer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchImagesAsync } from '../actions/index';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { term: ''};\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit(event) {\n    event.preventDefault();\n    this.props.fetchImagesAsync(this.state.term);\n    this.setState({term: '' });\n  }\n\n  onInputChange(event) {\n    this.setState({term: event.target.value });\n  }\n\n  componentDidMount() {\n    this.props.fetchImagesAsync('Amsterdam');\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.onFormSubmit}>\n        <div className=\"form-group\">\n          <button type=\"submit\">Search</button>\n          <input\n            size=\"35\"\n            placeholder=\"Enter a place i.e. Amsterdam, Canada\"\n            value={this.state.term}\n            onChange={this.onInputChange}\n          />\n        </div>\n      </form>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchImagesAsync }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\n\nclass ImageGridItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { imageStatus: \"loading\" };\n    this.props.handleOnClick = this.props.handleOnClick.bind(this);\n  }\n\n  handleImageLoaded() {\n    this.setState({ imageStatus: \"loaded\" });\n  }\n\n  handleImageError() {\n    this.setState({ imageStatus: \"failed to load image\" });\n  }\n\n  render() {\n    return (\n      <div className=\"col-sm\">\n        <div className=\"card\">\n          <img \n          onClick={this.props.handleOnClick(this.props.image_url)}\n          className={`card-img-top ${this.state.imageStatus}`}\n          src={this.props.image_url} \n          alt=\"First API request result\" \n          onLoad={this.handleImageLoaded.bind(this)}\n          onError={this.handleImageError.bind(this)}\n          />           \n          <div className=\"card-body\">\n            <h5 className=\"card-text\">{this.props.description}</h5>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n};\n\nexport default ImageGridItem;\n","import React from 'react';\n\nconst Modal = () => {\n  return <div>modal</div>\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport ImageGridItem from '../components/image_grid_item';\nimport Modal from '../components/modal';\nimport { showModal } from '../actions/index';\n\nclass ImageGrid extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n  \n  handleOnClick(image) {\n    this.props.showModal(image)\n  }\n\n  render() {\n    const records = this.props.records;\n    const modal = this.props.modal;\n\n    if(records.error){\n      return <div>{records.error}</div>;\n    } else if(records.isFetching) {\n      return <div className='spinner'></div>;\n    };\n    return(\n      <div className='row justify-content-center'>\n        {records.items.map(record => {\n          if(record.images) {\n            return(\n              <ImageGridItem\n                handleOnClick={this.props.handleOnClick}\n                image_url={record.images[0].baseimageurl}\n                description={record.title}\n                key={record.id}\n              />\n            );\n          }\n        })}\n        { modal.isOpen && <Modal /> }\n      </div>\n    )   \n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ showModal }, dispatch)\n}\n\nfunction mapStateToProps({ records, modal }) {\n  return { \n    records,\n    modal\n  };\n}\n\nexport default connect(mapStateToProps)(ImageGrid);\n","import React from 'react';\n\nimport SearchBar from '../containers/search_bar';\nimport ImageGrid from '../containers/image_grid';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"jumbotron text-center\">\n          <div className=\"jumbotron-heading\">\n            <h1>Harv-Art</h1>\n          </div>\n        \n          <p className=\"lead text-muted\">Search the Harvard Art Gallery's collection of paintings, photos and documents!</p>\n          <SearchBar />\n        </div>\n        <ImageGrid />\n      </div>\n    )\n  };\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport App from './components/app';\n\nimport './styles/style.scss'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}