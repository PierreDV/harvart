{"version":3,"sources":["actions/index.js","reducers/reducer_images.js","reducers/rootReducer.js","containers/search_bar.js","components/image_grid_item.js","containers/image_grid.js","components/app.js","index.js","store.js"],"names":["API_KEY","BASE_URL","FETCH_IMAGES_REQUEST","FETCH_IMAGES_SUCCESS","FETCH_IMAGES_FAILURE","fetchImagesAsync","place","dispatch","type","PLACE_URL","concat","fetch","then","res","json","records","length","error","OBJECT_URL","id","data","INITIAL_STATE","items","isFetching","rootReducer","combineReducers","state","arguments","undefined","action","Object","objectSpread","SearchBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","preventDefault","setState","target","value","react_default","a","createElement","onSubmit","className","size","placeholder","onChange","React","Component","connect","bindActionCreators","ImageGridItem","src","image_url","alt","description","ImageGrid","console","log","map","record","images","image_grid_item","baseimageurl","title","key","_ref","App","search_bar","image_grid","ReactDOM","render","es","store","createStore","applyMiddleware","thunk","configureStore","app","document","getElementById"],"mappings":"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","file":"static/js/main.d2ade646.chunk.js","sourcesContent":["const API_KEY = '81c02e10-19a3-11e9-a436-ede6838aae81';\nconst BASE_URL = 'https://api.harvardartmuseums.org/'\n// https://github.com/harvardartmuseums/api-docs\n\nexport const FETCH_IMAGES_REQUEST = 'FETCH_IMAGES_REQUEST';\nexport const FETCH_IMAGES_SUCCESS = 'FETCH_IMAGES_SUCCESS';\nexport const FETCH_IMAGES_FAILURE = 'FETCH_IMAGES_FAILURE';\n\nexport function fetchImagesAsync(place){\n  return (dispatch) => {\n    dispatch(fetchImagesRequest());\n    const PLACE_URL = `${BASE_URL}place?apikey=${API_KEY}&q=name:${place}&size=1`;\n    fetch(PLACE_URL)\n      .then(res => res.json())\n      .then((res) => {\n        if (!res.records.length) {\n          return dispatch(fetchImagesFailure(\"Could not locate images from entered place\"));\n        }\n        const OBJECT_URL = \n          `${BASE_URL}object?apikey=${API_KEY}&place=${res.records[0].id}&q=people.role:Artist AND imagepermissionlevel:0`\n        return fetch(OBJECT_URL)\n          .then(res => res.json())\n          .then((res) => {\n            // if(!res.records[0].images.length) {\n            //   return dispatch(fetchImagesFailure(\"No images were found for entered location\"));\n            // }\n            dispatch(fetchImagesSuccess(res))\n  \t\t\t\t})\n      })\n  }\n}\n\nfunction fetchImagesSuccess(data) {\n  return {\n    type: FETCH_IMAGES_SUCCESS,\n    data: data.records\n  };\n}\n\nfunction fetchImagesRequest() {\n  return {\n    type: FETCH_IMAGES_REQUEST,\n  };\n}\n\nfunction fetchImagesFailure(error) {\n  return {\n    type: FETCH_IMAGES_FAILURE,\n    error\n  }\n}","import { FETCH_IMAGES_SUCCESS, FETCH_IMAGES_REQUEST, FETCH_IMAGES_FAILURE } from '../actions/index';\n\nconst INITIAL_STATE = {\n\titems: [],\n\tisFetching: false,\n\terror: null,\n};\n\nexport default function(state = INITIAL_STATE, action) {\n\tswitch (action.type) {\n\tcase FETCH_IMAGES_REQUEST:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: true,\n\t\t\terror: null,\n\t\t};\n\tcase FETCH_IMAGES_SUCCESS:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: false,\n\t\t\titems: action.data,\n\t\t\terror: null,\n\t\t};\n\tcase FETCH_IMAGES_FAILURE:\n\t\treturn {\n\t\t\t...state,\n\t\t\tisFetching: false,\n\t\t\terror: action.error,\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n}\n","import { combineReducers} from 'redux';\nimport ImageReducer from './reducer_images';\n\nconst rootReducer = combineReducers({\n  records: ImageReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchImagesAsync } from '../actions/index';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { term: ''};\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n  }\n\n  onFormSubmit(event) {\n    event.preventDefault();\n    this.props.fetchImagesAsync(this.state.term);\n    this.setState({term: '' });\n  }\n\n  onInputChange(event) {\n    this.setState({term: event.target.value });\n  }\n\n  componentDidMount() {\n    this.props.fetchImagesAsync('Amsterdam');\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.onFormSubmit}>\n        <div className=\"form-group\">\n          <button type=\"submit\">Search</button>\n          <input\n            size=\"35\"\n            placeholder=\"Enter a place i.e. Amsterdam, Canada\"\n            value={this.state.term}\n            onChange={this.onInputChange}\n          />\n        </div>\n      </form>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ fetchImagesAsync }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React from 'react';\n\nconst ImageGridItem = (props) => {\n  return (\n    <div className=\"card\">\n      <img src={props.image_url} alt=\"First API request result\" ></img>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.description}</h5>\n      </div>\n    </div>\n    \n  );\n};\n\nexport default ImageGridItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ImageGridItem from '../components/image_grid_item';\n\nclass ImageGrid extends Component {\n  render() {\n    const records = this.props.records;\n\n    if(records.error){\n      return <div>{records.error}</div>;\n    } else if(records.isFetching) {\n      return <div>Loading...</div>;\n    };\n    console.log(records.items)\n    return(\n      <div className='row image-grid'>\n        {records.items.map(record => {\n          if(record.images) {\n            return(\n              <ImageGridItem\n                image_url={record.images[0].baseimageurl}\n                description={record.title}\n                key={record.id}\n              />\n            );\n          }\n        })}\n      </div>\n    )   \n  }\n}\n\nfunction mapStateToProps({ records }) {\n  return { records };\n}\n\nexport default connect(mapStateToProps)(ImageGrid);\n","import React from 'react';\n\nimport SearchBar from '../containers/search_bar';\nimport ImageGrid from '../containers/image_grid';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotron text-center\">\n          <div className=\"container\">\n            <div className=\"jumbotron-heading\">\n              <h1>Harv-Art</h1>\n            </div>\n          \n            <p className=\"lead text-muted\">Search the Harvard Art Gallery's collection of paintings, photos and documents!</p>\n            <SearchBar />\n          </div>\n          \n        </div>\n        <ImageGrid />\n      </div>\n\n\n    )\n  };\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\n\nimport App from './components/app';\n\nimport './styles/style.scss'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nexport default function configureStore(initialState = {}) {\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n  );\n}\n"],"sourceRoot":""}